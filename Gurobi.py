# -*- coding: utf-8 -*-
"""
Created on Fri Oct  1 20:35:58 2021

@author: Administrator
"""
import time
import gurobipy as gp
from gurobipy import GRB
import numpy as np


def serutest(demand,numOfWorker,numOfSeru,TC,FC,sc,ec,A):
    # 保存行列标签
    numOfScenario=len(demand)
    numOfProduct=len(demand[0])
   
    D=np.array(demand)
    
    R=1000 #一个足够大的数
    M=500
    
    # Create a new model
    m = gp.Model("seru1")
    
    # Create variables 创建变量
    z = m.addVars(range(numOfSeru),lb=1,vtype=gp.GRB.INTEGER, name="z") #决策变量，单元内人数，取值为大于等于1小于等于工人数量
    y = m.addVars(range(numOfProduct),range(numOfSeru),vtype=gp.GRB.BINARY, name="y")#决策变量，产品-SERU分配，0-1变量
    x = m.addVars(range(numOfScenario),range(numOfProduct),range(numOfSeru),lb=0,vtype=gp.GRB.INTEGER, name="x")#决策变量，SERU生产产品的数量，大于等于0
    v = m.addVars(range(numOfProduct),range(numOfSeru),vtype=gp.GRB.INTEGER, name="v")#为了线性化加入的变量
    
    # 更新变量环境
    m.update()
    
    # 建立一个表达式计算成本
    shortage_cost=gp.quicksum((D[s,i]-gp.quicksum(x[s,i,j] for j in range(numOfSeru))) for s in range(numOfScenario) for i in range(numOfProduct)) * sc
    excess_cost=gp.quicksum((z[j] * A -gp.quicksum(x[s,i,j] for i in range(numOfProduct))) for s in range(numOfScenario) for j in range(numOfSeru)) * ec
    total_cost=(shortage_cost + excess_cost) / numOfScenario
    expr=numOfSeru*FC + gp.quicksum(TC*v[i,j] for i in range(numOfProduct) for j in range(numOfSeru)) + total_cost
    
    # Set objective设置目标函数
    m.setObjective(expr,sense=gp.GRB.MINIMIZE)
    
    # 添加约束条件
    m.addConstr(gp.quicksum(z[j] for j in range(numOfSeru)) == numOfWorker)#系统内人数不变
    m.addConstrs(gp.quicksum(y[i,j] for i in range(numOfProduct)) >=1 for j in range(numOfSeru))#每个单元分配的产品种类数量至少为1
    m.addConstrs(gp.quicksum(y[i,j] for i in range(numOfProduct)) <=numOfProduct for j in range(numOfSeru))#每个单元分配的产品种类数量至多为全部产品类型
    m.addConstrs(gp.quicksum(y[i,j] for j in range(numOfSeru)) >=1 for i in range(numOfProduct))#每种产品都至少有1个单元能够装配
    m.addConstrs(v[i,j] <= (z[j]+M*(1-y[i,j])) for i in range(numOfProduct) for j in range(numOfSeru))
    m.addConstrs((z[j]-M*(1-y[i,j])) <= v[i,j] for i in range(numOfProduct) for j in range(numOfSeru))
    m.addConstrs(v[i,j] <= M*y[i,j] for i in range(numOfProduct) for j in range(numOfSeru))
    m.addConstrs(-1*M*y[i,j] <= v[i,j] for i in range(numOfProduct) for j in range(numOfSeru))
    m.addConstrs(x[s,i,j] <= R*y[i,j] for s in range(numOfScenario) for i in range(numOfProduct) for j in range(numOfSeru))#如果单元不能装配产品，则二者之间不会发生产品流，即如果，则；如果，则，小于需求量与单元生产能力中较大的数，大于较小的那个数
    m.addConstrs(gp.quicksum(x[s,i,j] for i in range(numOfProduct)) <= z[j]*A for s in range(numOfScenario) for j in range(numOfSeru))#单元生产量不能超过其生产能力
    m.addConstrs(gp.quicksum(x[s,i,j] for j in range(numOfSeru)) <= D[s,i] for s in range(numOfScenario) for i in range(numOfProduct))#单元生产量不能超过其生产能力
    
    # Optimize model
    m.optimize()
    
    # 输出信息
    if m.status == gp.GRB.Status.OPTIMAL:
        print("\nGlobal optimal solution found. 得到了全局最优解")
    
    Z= m.getAttr('x',z)
    #print('Z',Z)
    workerToseru= []
    for j in range(numOfSeru):
        workerToseru.append(Z[j])
    print('workerToseru',workerToseru)

    Y= m.getAttr('x',y)
    #print('Y',Y)
    productToseru=[]
    for i in range(numOfProduct):
        product=[]
        for j in range(numOfSeru):
            product.append(Y[i,j]) 
        productToseru.append(product)
    #print('0productToseru',productToseru)
    productToseru=np.array(productToseru)
    print('productToseru',productToseru)
    
    X= m.getAttr('x',x)
    #print('X',X)
    loading=[]
    for s in range(numOfScenario):
        scenario=[]
        for i in range(numOfProduct):
            pro=[]
            for j in range(numOfSeru):
                pro.append(X[s,i,j])
            scenario.append(pro)
        #print('scenario',scenario)
        loading.append(scenario)
    #print('loading',loading)
    loading= np.array(loading)
    loading=loading.tolist()
    #print('1loading',loading) 
    #print('loading', loading)
    TotalCost= m.objVal
    print("总成本为：",TotalCost)
    return workerToseru,productToseru,TotalCost,loading


#产品间差异大demand=[[29, 57, 111, 203], [26, 122, 79, 173], [15, 88, 109, 188], [22, 85, 29, 264], [32, 37, 141, 190], [32, 24, 134, 210], [3, 112, 99, 186], [21, 102, 46, 231], [30, 132, 108, 130], [25, 32, 227, 116], [14, 78, 130, 178], [17, 45, 109, 229], [46, 8, 28, 318], [18, 55, 79, 248], [16, 94, 170, 120], [3, 36, 58, 303], [29, 67, 154, 150], [23, 79, 116, 182], [31, 67, 130, 172], [15, 93, 96, 196], [19, 83, 119, 179], [13, 100, 124, 163], [36, 84, 131, 149], [4, 60, 157, 179], [33, 82, 50, 235], [15, 53, 56, 276], [1, 106, 85, 208], [13, 107, 86, 194], [21, 74, 75, 230], [6, 96, 75, 223], [3, 120, 108, 169], [28, 100, 149, 123], [10, 67, 154, 169], [14, 64, 199, 123], [15, 92, 72, 221], [23, 45, 142, 190], [22, 93, 13, 272], [17, 22, 148, 213], [21, 58, 64, 257], [38, 40, 147, 175], [33, 118, 115, 134], [11, 80, 145, 164], [4, 93, 40, 263], [28, 69, 136, 167], [8, 107, 33, 252], [12, 39, 190, 159], [10, 49, 149, 192], [20, 119, 114, 147], [37, 37, 89, 237], [23, 88, 169, 120], [26, 50, 160, 164], [45, 18, 107, 230], [21, 45, 115, 219], [33, 65, 49, 253], [25, 67, 28, 280], [12, 78, 217, 93], [10, 15, 72, 303], [11, 42, 55, 292], [17, 125, 93, 165], [1, 40, 186, 173], [32, 91, 200, 77], [19, 59, 189, 133], [32, 71, 55, 242], [13, 116, 29, 242], [8, 67, 64, 261], [20, 53, 109, 218], [21, 132, 106, 141], [15, 130, 88, 167], [30, 63, 13, 294], [22, 64, 161, 153], [28, 49, 120, 203], [26, 96, 134, 144], [30, 84, 178, 108], [4, 172, 92, 132], [20, 53, 117, 210], [27, 110, 64, 199], [35, 74, 71, 220], [27, 86, 234, 53], [5, 137, 94, 164], [9, 89, 36, 266], [30, 29, 171, 170], [14, 111, 84, 191], [18, 60, 102, 220], [10, 96, 69, 225], [24, 84, 46, 246], [15, 87, 79, 219], [14, 117, 23, 246], [21, 84, 99, 196], [2, 56, 54, 288], [24, 110, 114, 152], [20, 44, 47, 289], [10, 180, 123, 87], [23, 72, 130, 175], [31, 77, 79, 213], [57, 73, 131, 139], [25, 134, 90, 151], [29, 77, 74, 220], [7, 55, 157, 181], [31, 28, 138, 203], [28, 91, 41, 240], [28, 34, 77, 261], [37, 161, 113, 89], [7, 82, 116, 195], [17, 36, 104, 243], [39, 50, 159, 152], [22, 102, 102, 174], [6, 27, 17, 350], [30, 88, 141, 141], [15, 40, 140, 205], [23, 110, 81, 186], [29, 77, 39, 255], [25, 89, 116, 170], [12, 67, 112, 209], [23, 141, 127, 109], [13, 59, 124, 204], [23, 65, 166, 146], [41, 77, 202, 80], [37, 89, 65, 209], [21, 152, 138, 89], [12, 69, 32, 287], [17, 124, 33, 226], [14, 100, 79, 207], [32, 121, 107, 140], [26, 97, 158, 119], [18, 56, 58, 268], [16, 44, 13, 327], [21, 26, 57, 296], [4, 136, 80, 180], [2, 28, 86, 284], [10, 38, 142, 210], [15, 27, 153, 205], [12, 156, 62, 170], [15, 93, 40, 252], [17, 65, 124, 194], [29, 110, 155, 106], [22, 83, 76, 219], [14, 44, 121, 221], [3, 81, 151, 165], [22, 82, 164, 132], [20, 88, 55, 237], [22, 44, 7, 327], [20, 45, 107, 228], [25, 101, 137, 137], [11, 29, 68, 292], [18, 66, 95, 221], [30, 165, 108, 97], [6, 81, 96, 217], [38, 37, 97, 228], [12, 106, 167, 115], [30, 71, 232, 67], [8, 90, 124, 178], [25, 52, 121, 202], [10, 130, 93, 167], [24, 130, 95, 151], [32, 47, 123, 198], [19, 31, 164, 186], [11, 112, 138, 139], [40, 141, 144, 75], [17, 75, 172, 136], [31, 44, 148, 177], [47, 93, 38, 222], [29, 62, 123, 186], [3, 135, 39, 223], [37, 16, 92, 255], [38, 91, 64, 207], [9, 55, 137, 199], [18, 58, 174, 150], [28, 58, 124, 190], [18, 64, 186, 132], [30, 17, 48, 305], [27, 63, 53, 257], [22, 87, 108, 183], [29, 93, 64, 214], [23, 87, 105, 185], [16, 46, 173, 165], [14, 67, 65, 254], [32, 69, 92, 207], [16, 1, 79, 304], [13, 115, 67, 205], [34, 19, 130, 217], [5, 54, 94, 247], [7, 49, 56, 288], [23, 103, 89, 185], [32, 68, 73, 227], [14, 92, 133, 161], [18, 92, 73, 217], [15, 136, 70, 179], [13, 127, 169, 91], [33, 90, 165, 112], [30, 42, 204, 124], [28, 99, 203, 70], [30, 106, 45, 219], [30, 47, 48, 275], [17, 22, 124, 237], [9, 65, 65, 261], [36, 86, 92, 186], [32, 21, 4, 343], [45, 71, 63, 221], [29, 115, 17, 239], [15, 122, 125, 138]]
#产品间差异小demand=[[37, 116, 108, 139], [81, 106, 119, 94], [94, 148, 112, 46], [40, 142, 79, 139], [98, 47, 112, 143], [121, 87, 130, 62], [27, 110, 108, 155], [40, 86, 76, 198], [33, 137, 66, 164], [64, 125, 125, 86], [110, 109, 128, 53], [54, 54, 141, 151], [93, 149, 126, 32], [35, 97, 58, 210], [115, 53, 129, 103], [62, 43, 169, 126], [105, 46, 18, 231], [20, 71, 139, 170], [92, 125, 113, 70], [55, 98, 177, 70], [52, 114, 114, 120], [61, 88, 145, 106], [14, 82, 142, 162], [2, 87, 73, 238], [70, 114, 129, 87], [87, 63, 72, 178], [8, 8, 127, 257], [76, 100, 97, 127], [86, 6, 157, 151], [74, 103, 44, 179], [8, 99, 125, 168], [72, 35, 191, 102], [37, 104, 124, 135], [57, 95, 142, 106], [86, 50, 105, 159], [19, 200, 55, 126], [86, 32, 141, 141], [25, 127, 131, 117], [104, 11, 203, 82], [109, 104, 61, 126], [108, 72, 108, 112], [93, 121, 94, 92], [109, 110, 77, 104], [22, 94, 158, 126], [108, 119, 110, 63], [93, 49, 105, 153], [139, 32, 97, 132], [59, 100, 110, 131], [116, 50, 104, 130], [67, 147, 51, 135], [95, 62, 105, 138], [136, 46, 50, 168], [89, 156, 111, 44], [46, 145, 108, 101], [107, 91, 89, 113], [85, 59, 138, 118], [16, 100, 130, 154], [85, 97, 74, 144], [38, 107, 112, 143], [103, 133, 65, 99], [120, 89, 25, 166], [63, 52, 188, 97], [21, 99, 206, 74], [40, 91, 87, 182], [109, 95, 77, 119], [45, 96, 135, 124], [127, 17, 94, 162], [49, 66, 161, 124], [113, 146, 83, 58], [64, 110, 83, 143], [142, 100, 79, 79], [75, 70, 142, 113], [53, 90, 87, 170], [152, 27, 91, 130], [109, 76, 106, 109], [67, 107, 48, 178], [8, 93, 118, 181], [37, 111, 124, 128], [73, 165, 40, 122], [87, 116, 93, 104], [124, 72, 158, 46], [125, 27, 91, 157], [106, 53, 162, 79], [135, 49, 180, 36], [135, 89, 41, 135], [43, 150, 107, 100], [65, 70, 92, 173], [86, 57, 144, 113], [132, 65, 112, 91], [45, 114, 49, 192], [130, 58, 45, 167], [87, 59, 115, 139], [172, 74, 125, 29], [64, 61, 97, 178], [54, 81, 111, 154], [56, 33, 176, 135], [65, 126, 97, 112], [148, 148, 66, 38], [73, 118, 109, 100], [72, 91, 130, 107], [154, 109, 68, 69], [68, 102, 108, 122], [105, 101, 119, 75], [114, 123, 63, 100], [122, 180, 40, 58], [31, 83, 89, 197], [53, 89, 96, 162], [67, 143, 38, 152], [100, 29, 84, 187], [87, 9, 196, 108], [87, 49, 136, 128], [77, 119, 64, 140], [113, 86, 29, 172], [106, 92, 145, 57], [83, 89, 73, 155], [80, 136, 42, 142], [97, 105, 75, 123], [66, 140, 74, 120], [61, 113, 83, 143], [131, 17, 127, 125], [60, 175, 95, 70], [114, 163, 2, 121], [65, 84, 122, 129], [83, 78, 132, 107], [105, 67, 132, 96], [37, 129, 124, 110], [134, 24, 125, 117], [70, 101, 79, 150], [96, 76, 58, 170], [122, 31, 134, 113], [93, 22, 99, 186], [100, 93, 162, 45], [83, 91, 74, 152], [116, 55, 47, 182], [39, 67, 169, 125], [135, 88, 68, 109], [55, 114, 71, 160], [41, 109, 175, 75], [120, 100, 134, 46], [97, 66, 97, 140], [35, 38, 178, 149], [114, 87, 80, 119], [117, 138, 26, 119], [101, 163, 74, 62], [110, 127, 93, 70], [83, 149, 49, 119], [113, 74, 55, 158], [53, 80, 118, 149], [32, 131, 143, 94], [140, 81, 74, 105], [109, 107, 57, 127], [52, 98, 79, 171], [32, 175, 80, 113], [22, 174, 63, 141], [49, 95, 201, 55], [99, 141, 96, 64], [76, 75, 119, 130], [95, 80, 114, 111], [91, 84, 65, 160], [132, 74, 65, 129], [176, 57, 91, 76], [19, 130, 91, 160], [104, 128, 59, 109], [93, 45, 98, 164], [56, 135, 71, 138], [54, 161, 152, 33], [78, 85, 80, 157], [124, 32, 154, 90], [88, 69, 101, 142], [101, 48, 133, 118], [100, 48, 125, 127], [98, 54, 113, 135], [19, 134, 181, 66], [24, 91, 194, 91], [93, 94, 70, 143], [58, 151, 117, 74], [70, 76, 158, 96], [106, 77, 115, 102], [81, 82, 97, 140], [95, 112, 50, 143], [19, 130, 148, 103], [76, 124, 90, 110], [85, 129, 95, 91], [80, 69, 60, 191], [163, 103, 68, 66], [112, 171, 48, 69], [65, 79, 161, 95], [81, 68, 57, 194], [62, 75, 72, 191], [112, 70, 52, 166], [82, 102, 147, 69], [119, 83, 115, 83], [93, 97, 98, 112], [9, 115, 44, 232], [62, 39, 153, 146], [67, 80, 91, 162], [91, 47, 143, 119], [13, 162, 152, 73], [102, 47, 140, 111], [51, 82, 198, 69]]
demand=[[63, 107, 99, 131], [136, 79, 117, 68], [50, 97, 109, 144], [172, 125, 42, 61], [101, 76, 128, 95], [114, 55, 28, 203], [86, 144, 83, 87], [55, 109, 136, 100], [76, 112, 161, 51], [60, 110, 118, 112], [92, 99, 159, 50], [85, 129, 68, 118], [128, 73, 117, 82], [101, 134, 81, 84], [179, 87, 37, 97], [141, 84, 29, 146], [130, 92, 103, 75], [98, 44, 184, 74], [67, 132, 200, 1], [97, 130, 113, 60], [61, 101, 105, 133], [161, 54, 37, 148], [49, 116, 155, 80], [101, 17, 135, 147], [117, 91, 86, 106], [78, 141, 94, 87], [63, 168, 46, 123], [81, 148, 98, 73], [137, 131, 33, 99], [126, 75, 72, 127], [22, 63, 193, 122], [71, 131, 69, 129], [97, 96, 170, 37], [112, 103, 122, 63], [86, 174, 94, 46], [77, 154, 43, 126], [162, 108, 62, 68], [71, 196, 22, 111], [71, 146, 85, 98], [83, 205, 45, 67], [27, 204, 103, 66], [129, 111, 102, 58], [123, 88, 56, 133], [84, 82, 88, 146], [146, 63, 52, 139], [175, 58, 109, 58], [117, 78, 77, 128], [83, 96, 104, 117], [96, 102, 68, 134], [92, 65, 139, 104], [165, 124, 48, 63], [46, 97, 111, 146], [142, 113, 103, 42], [117, 81, 28, 174], [160, 81, 111, 48], [67, 196, 70, 67], [92, 97, 121, 90], [114, 177, 13, 96], [115, 57, 173, 55], [95, 77, 103, 125], [99, 125, 106, 70], [181, 77, 83, 59], [54, 200, 34, 112], [119, 95, 101, 85], [111, 111, 100, 78], [5, 97, 171, 127], [92, 184, 84, 40], [121, 42, 134, 103], [156, 78, 10, 156], [80, 132, 85, 103], [84, 73, 174, 69], [45, 90, 171, 94], [66, 117, 66, 151], [108, 71, 178, 43], [82, 124, 147, 47], [192, 26, 79, 103], [123, 40, 138, 99], [76, 147, 42, 135], [84, 16, 154, 146], [92, 21, 155, 132], [67, 81, 134, 118], [113, 30, 166, 91], [118, 34, 105, 143], [16, 122, 90, 172], [96, 67, 48, 189], [50, 128, 108, 114], [57, 90, 157, 96], [130, 105, 78, 87], [108, 49, 122, 121], [177, 37, 74, 112], [128, 41, 82, 149], [82, 147, 109, 62], [84, 72, 153, 91], [132, 119, 91, 58], [81, 91, 138, 90], [43, 67, 98, 192], [119, 97, 84, 100], [120, 80, 57, 143], [127, 109, 112, 52], [69, 135, 141, 55], [102, 64, 131, 103], [129, 11, 103, 157], [164, 87, 108, 41], [134, 80, 155, 31], [92, 77, 134, 97], [72, 149, 73, 106], [132, 138, 80, 50], [48, 37, 179, 136], [62, 94, 151, 93], [118, 100, 49, 133], [136, 126, 51, 87], [39, 187, 74, 100], [73, 135, 78, 114], [75, 126, 121, 78], [93, 153, 57, 97], [108, 144, 73, 75], [105, 48, 58, 189], [148, 52, 123, 77], [90, 127, 152, 31], [41, 80, 20, 259], [90, 117, 65, 128], [104, 117, 51, 128], [123, 95, 73, 109], [37, 202, 99, 62], [81, 144, 90, 85], [119, 89, 127, 65], [121, 105, 121, 53], [16, 96, 164, 124], [76, 119, 118, 87], [50, 82, 212, 56], [112, 68, 109, 111], [96, 99, 111, 94], [109, 94, 152, 45], [74, 138, 89, 99], [110, 41, 133, 116], [46, 78, 75, 201], [97, 122, 74, 107], [123, 93, 110, 74], [107, 90, 62, 141], [91, 169, 60, 80], [25, 113, 163, 99], [147, 60, 101, 92], [64, 114, 116, 106], [78, 102, 23, 197], [69, 51, 107, 173], [103, 60, 121, 116], [158, 44, 99, 99], [97, 32, 117, 154], [138, 95, 42, 125], [45, 67, 152, 136], [153, 18, 119, 110], [224, 78, 28, 70], [94, 53, 131, 122], [134, 88, 66, 112], [89, 113, 123, 75], [120, 153, 81, 46], [99, 163, 46, 92], [89, 62, 211, 38], [174, 123, 17, 86], [96, 99, 71, 134], [109, 125, 88, 78], [60, 184, 107, 49], [142, 92, 94, 72], [109, 139, 86, 66], [79, 161, 121, 39], [127, 41, 152, 80], [54, 128, 99, 119], [123, 49, 110, 118], [62, 111, 79, 148], [128, 81, 41, 150], [87, 150, 113, 50], [77, 92, 81, 150], [80, 93, 83, 144], [103, 60, 130, 107], [80, 175, 72, 73], [78, 160, 47, 115], [37, 193, 62, 108], [80, 116, 108, 96], [129, 77, 37, 157], [74, 169, 57, 100], [76, 81, 66, 177], [26, 114, 112, 148], [70, 108, 87, 135], [118, 35, 140, 107], [147, 35, 94, 124], [53, 134, 75, 138], [114, 69, 102, 115], [74, 132, 102, 92], [39, 96, 202, 63], [73, 129, 97, 101], [183, 68, 9, 140], [141, 41, 84, 134], [61, 28, 129, 182], [75, 105, 95, 125], [161, 143, 59, 37], [60, 38, 115, 187], [84, 103, 48, 165], [122, 85, 135, 58], [80, 84, 116, 120], [100, 156, 27, 117]]
#demand=[[116, 81, 106, 97], [93, 102, 105, 100], [82, 100, 97, 121], [110, 97, 92, 101], [88, 103, 97, 112], [110, 106, 93, 91], [103, 107, 89, 101], [106, 101, 95, 98], [89, 94, 109, 108], [92, 85, 104, 119], [106, 95, 97, 102], [91, 114, 95, 100], [89, 116, 97, 98], [111, 91, 105, 93], [110, 89, 101, 100], [106, 122, 98, 74], [106, 92, 95, 107], [84, 101, 103, 112], [99, 99, 89, 113], [94, 111, 92, 103], [102, 96, 111, 91], [108, 100, 99, 93], [94, 94, 114, 98], [100, 92, 110, 98], [96, 112, 86, 106], [89, 106, 92, 113], [106, 103, 95, 96], [86, 102, 101, 111], [87, 99, 113, 101], [94, 100, 111, 95], [87, 109, 95, 109], [92, 105, 94, 109], [99, 89, 101, 111], [92, 105, 107, 96], [98, 107, 94, 101], [103, 92, 107, 98], [93, 110, 95, 102], [92, 110, 93, 105], [106, 95, 93, 106], [100, 95, 98, 107], [98, 98, 103, 101], [109, 86, 107, 98], [101, 103, 104, 92], [104, 89, 104, 103], [85, 109, 111, 95], [98, 84, 118, 100], [102, 98, 106, 94], [96, 100, 102, 102], [113, 100, 102, 85], [103, 96, 95, 106], [107, 90, 99, 104], [97, 105, 86, 112], [95, 93, 111, 101], [106, 99, 110, 85], [83, 95, 115, 107], [102, 98, 96, 104], [90, 101, 108, 101], [102, 95, 107, 96], [100, 113, 98, 89], [97, 86, 112, 105], [95, 107, 104, 94], [108, 86, 100, 106], [108, 98, 111, 83], [124, 93, 93, 90], [94, 106, 103, 97], [96, 95, 98, 111], [102, 105, 88, 105], [89, 109, 93, 109], [113, 106, 95, 86], [108, 98, 100, 94], [94, 105, 94, 107], [100, 99, 102, 99], [103, 95, 103, 99], [87, 102, 94, 117], [101, 101, 95, 103], [91, 109, 109, 91], [86, 115, 108, 91], [102, 103, 101, 94], [103, 101, 93, 103], [112, 98, 107, 83], [106, 111, 79, 104], [111, 90, 96, 103], [107, 95, 90, 108], [103, 105, 91, 101], [91, 100, 106, 103], [107, 105, 97, 91], [93, 103, 106, 98], [92, 100, 106, 102], [97, 94, 112, 97], [96, 103, 122, 79], [99, 104, 93, 104], [106, 103, 101, 90], [106, 95, 98, 101], [106, 108, 107, 79], [92, 101, 96, 111], [93, 108, 92, 107], [115, 88, 91, 106], [107, 102, 87, 104], [94, 108, 95, 103], [104, 108, 101, 87], [102, 88, 108, 102], [105, 107, 100, 88], [101, 94, 97, 108], [102, 96, 104, 98], [102, 101, 98, 99], [126, 96, 78, 100], [89, 96, 109, 106], [103, 100, 101, 96], [94, 102, 100, 104], [113, 103, 95, 89], [97, 108, 93, 102], [111, 100, 100, 89], [89, 99, 101, 111], [111, 110, 91, 88], [107, 99, 95, 99], [122, 90, 94, 94], [98, 105, 111, 86], [99, 88, 107, 106], [91, 93, 116, 100], [97, 107, 92, 104], [111, 91, 104, 94], [112, 77, 119, 92], [88, 101, 106, 105], [99, 92, 111, 98], [95, 92, 103, 110], [96, 109, 105, 90], [109, 113, 84, 94], [98, 92, 90, 120], [103, 113, 95, 89], [101, 114, 90, 95], [96, 107, 101, 96], [92, 100, 98, 110], [82, 108, 111, 99], [85, 97, 119, 99], [96, 104, 107, 93], [97, 105, 73, 125], [110, 80, 111, 99], [97, 102, 104, 97], [112, 90, 94, 104], [108, 99, 97, 96], [85, 110, 109, 96], [94, 96, 110, 100], [104, 98, 99, 99], [95, 93, 101, 111], [99, 103, 113, 85], [105, 94, 105, 96], [110, 107, 91, 92], [103, 87, 106, 104], [100, 115, 93, 92], [104, 97, 101, 98], [116, 100, 84, 100], [105, 105, 89, 101], [92, 92, 117, 99], [98, 98, 102, 102], [92, 92, 114, 102], [100, 113, 86, 101], [98, 97, 107, 98], [105, 109, 94, 92], [96, 93, 100, 111], [116, 96, 97, 91], [104, 95, 96, 105], [90, 103, 106, 101], [110, 102, 95, 93], [96, 103, 91, 110], [95, 104, 102, 99], [97, 98, 92, 113], [90, 116, 101, 93], [119, 101, 82, 98], [102, 109, 90, 99], [103, 91, 96, 110], [114, 89, 98, 99], [100, 112, 97, 91], [110, 101, 110, 79], [99, 97, 108, 96], [112, 107, 86, 95], [104, 99, 95, 102], [95, 107, 99, 99], [102, 97, 97, 104], [98, 102, 92, 108], [105, 98, 102, 95], [82, 102, 112, 104], [99, 94, 105, 102], [78, 95, 110, 117], [112, 104, 98, 86], [109, 101, 105, 85], [94, 100, 108, 98], [117, 97, 96, 90], [91, 100, 101, 108], [96, 97, 103, 104], [108, 104, 98, 90], [92, 95, 103, 110], [99, 114, 88, 99], [98, 97, 97, 108], [108, 89, 96, 107], [122, 97, 77, 104], [118, 91, 81, 110], [97, 131, 101, 71], [108, 99, 88, 105], [90, 105, 92, 113], [109, 88, 124, 79]]
#demand=[[106, 62, 111, 121], [126, 79, 113, 82], [105, 105, 68, 122], [64, 111, 127, 98], [95, 111, 103, 91], [106, 49, 139, 106], [86, 120, 105, 89], [87, 104, 103, 106], [116, 114, 85, 85], [103, 108, 87, 102], [118, 72, 86, 124], [109, 97, 72, 122], [119, 83, 88, 110], [97, 106, 96, 101], [79, 88, 103, 130], [121, 93, 95, 91], [94, 124, 58, 124], [77, 96, 100, 127], [113, 89, 110, 88], [108, 117, 107, 68], [83, 85, 141, 91], [87, 92, 90, 131], [88, 142, 83, 87], [138, 95, 83, 84], [148, 104, 109, 39], [98, 84, 107, 111], [122, 86, 69, 123], [92, 121, 118, 69], [94, 120, 102, 84], [107, 128, 83, 82], [133, 86, 90, 91], [80, 88, 129, 103], [104, 92, 120, 84], [74, 131, 74, 121], [104, 77, 102, 117], [67, 87, 118, 128], [127, 72, 87, 114], [101, 85, 110, 104], [101, 101, 99, 99], [126, 102, 94, 78], [76, 138, 123, 63], [96, 99, 111, 94], [94, 139, 97, 70], [95, 92, 112, 101], [95, 83, 112, 110], [85, 122, 70, 123], [76, 121, 112, 91], [91, 111, 106, 92], [85, 93, 130, 92], [114, 86, 127, 73], [104, 103, 82, 111], [102, 88, 158, 52], [98, 98, 121, 83], [113, 116, 86, 85], [131, 101, 69, 99], [106, 85, 123, 86], [113, 94, 99, 94], [80, 105, 125, 90], [79, 88, 110, 123], [90, 124, 89, 97], [108, 96, 85, 111], [72, 115, 95, 118], [95, 89, 94, 122], [59, 135, 104, 102], [107, 127, 76, 90], [89, 88, 120, 103], [94, 103, 106, 97], [111, 117, 81, 91], [99, 114, 95, 92], [60, 103, 114, 123], [99, 111, 114, 76], [107, 126, 82, 85], [111, 115, 98, 76], [110, 109, 99, 82], [76, 102, 113, 109], [129, 100, 97, 74], [117, 93, 122, 68], [112, 95, 70, 123], [67, 108, 110, 115], [92, 94, 92, 122], [126, 120, 87, 67], [89, 115, 110, 86], [101, 109, 87, 103], [112, 71, 73, 144], [94, 127, 93, 86], [123, 105, 55, 117], [126, 74, 113, 87], [88, 74, 105, 133], [108, 92, 119, 81], [97, 139, 90, 74], [97, 107, 84, 112], [103, 83, 128, 86], [102, 100, 79, 119], [110, 86, 102, 102], [108, 97, 83, 112], [87, 90, 91, 132], [145, 112, 91, 52], [106, 121, 79, 94], [71, 103, 113, 113], [97, 89, 107, 107], [102, 120, 74, 104], [93, 106, 90, 111], [91, 86, 99, 124], [106, 111, 89, 94], [85, 104, 112, 99], [92, 115, 80, 113], [129, 90, 112, 69], [90, 109, 77, 124], [122, 103, 88, 87], [96, 126, 93, 85], [80, 91, 124, 105], [106, 108, 72, 114], [103, 76, 132, 89], [97, 96, 131, 76], [105, 100, 107, 88], [92, 102, 82, 124], [76, 130, 114, 80], [127, 110, 87, 76], [110, 104, 71, 115], [90, 115, 112, 83], [94, 126, 74, 106], [120, 81, 108, 91], [117, 95, 102, 86], [126, 95, 68, 111], [77, 100, 90, 133], [91, 84, 131, 94], [98, 94, 112, 96], [83, 91, 123, 103], [125, 80, 76, 119], [105, 103, 93, 99], [134, 95, 81, 90], [102, 125, 81, 92], [89, 83, 86, 142], [104, 117, 111, 68], [95, 103, 84, 118], [117, 108, 56, 119], [100, 103, 82, 115], [117, 117, 97, 69], [97, 112, 79, 112], [117, 107, 87, 89], [68, 120, 107, 105], [131, 109, 86, 74], [107, 93, 88, 112], [119, 93, 88, 100], [101, 102, 112, 85], [106, 67, 101, 126], [106, 74, 136, 84], [73, 108, 111, 108], [108, 125, 88, 79], [91, 102, 109, 98], [93, 103, 90, 114], [85, 108, 104, 103], [79, 135, 102, 84], [124, 80, 98, 98], [68, 110, 82, 140], [61, 94, 126, 119], [102, 82, 130, 86], [123, 107, 91, 79], [107, 100, 108, 85], [61, 119, 100, 120], [142, 92, 89, 77], [127, 87, 75, 111], [78, 86, 127, 109], [90, 88, 107, 115], [128, 82, 66, 124], [112, 123, 97, 68], [87, 92, 101, 120], [104, 117, 125, 54], [105, 98, 92, 105], [77, 114, 116, 93], [98, 110, 89, 103], [100, 95, 129, 76], [103, 115, 91, 91], [89, 107, 83, 121], [92, 115, 102, 91], [88, 107, 73, 132], [90, 90, 99, 121], [127, 84, 107, 82], [73, 100, 96, 131], [109, 90, 113, 88], [101, 97, 88, 114], [117, 114, 108, 61], [114, 88, 87, 111], [110, 95, 85, 110], [59, 110, 129, 102], [82, 122, 114, 82], [100, 137, 110, 53], [104, 75, 131, 90], [114, 95, 105, 86], [105, 119, 113, 63], [74, 102, 140, 84], [118, 104, 87, 91], [109, 113, 76, 102], [106, 96, 110, 88], [100, 69, 130, 101], [100, 95, 83, 122], [107, 116, 95, 82], [116, 99, 95, 90], [88, 85, 133, 94], [104, 96, 119, 81]]
#demand=[[39, 68, 92, 201], [135, 171, 66, 28], [121, 85, 149, 45], [111, 54, 133, 102], [86, 117, 107, 90], [120, 46, 167, 67], [80, 132, 121, 67], [123, 68, 83, 126], [107, 60, 105, 128], [159, 83, 115, 43], [103, 133, 78, 86], [79, 106, 135, 80], [84, 134, 131, 51], [101, 126, 116, 57], [123, 106, 87, 84], [137, 80, 88, 95], [104, 168, 54, 74], [111, 68, 69, 152], [35, 125, 93, 147], [41, 108, 162, 89], [95, 109, 135, 61], [66, 49, 140, 145], [113, 75, 73, 139], [60, 65, 178, 97], [55, 99, 121, 125], [131, 39, 133, 97], [55, 66, 198, 81], [39, 110, 152, 99], [89, 84, 158, 69], [114, 56, 156, 74], [106, 47, 69, 178], [88, 135, 130, 47], [90, 22, 138, 150], [147, 63, 61, 129], [128, 132, 78, 62], [144, 61, 85, 110], [107, 89, 86, 118], [114, 96, 134, 56], [125, 103, 71, 101], [106, 143, 63, 88], [134, 30, 112, 124], [109, 44, 121, 126], [141, 99, 100, 60], [136, 34, 98, 132], [130, 119, 103, 48], [184, 26, 124, 66], [120, 87, 97, 96], [86, 118, 117, 79], [94, 89, 89, 128], [126, 106, 36, 132], [138, 99, 27, 136], [65, 68, 180, 87], [115, 158, 51, 76], [96, 23, 139, 142], [31, 125, 209, 35], [116, 69, 39, 176], [114, 70, 110, 106], [34, 97, 53, 216], [78, 116, 81, 125], [137, 10, 145, 108], [124, 29, 190, 57], [66, 159, 112, 63], [94, 125, 57, 124], [167, 125, 47, 61], [88, 108, 118, 86], [108, 80, 90, 122], [85, 79, 80, 156], [85, 168, 84, 63], [144, 159, 33, 64], [127, 64, 128, 81], [136, 96, 81, 87], [43, 77, 158, 122], [207, 47, 13, 133], [65, 60, 103, 172], [66, 69, 148, 117], [159, 49, 58, 134], [155, 141, 81, 23], [130, 114, 112, 44], [66, 97, 126, 111], [92, 104, 146, 58], [76, 126, 40, 158], [141, 99, 108, 52], [123, 103, 157, 17], [84, 191, 75, 50], [67, 102, 180, 51], [110, 154, 66, 70], [81, 107, 125, 87], [19, 136, 96, 149], [65, 155, 54, 126], [109, 76, 137, 78], [104, 90, 59, 147], [132, 90, 88, 90], [107, 100, 110, 83], [50, 122, 136, 92], [92, 58, 125, 125], [14, 136, 134, 116], [79, 119, 88, 114], [19, 69, 124, 188], [93, 85, 131, 91], [127, 72, 101, 100], [176, 4, 130, 90], [85, 35, 123, 157], [179, 27, 100, 94], [139, 44, 116, 101], [116, 156, 57, 71], [127, 35, 138, 100], [89, 68, 60, 183], [92, 117, 69, 122], [128, 123, 78, 71], [88, 134, 91, 87], [101, 113, 106, 80], [74, 60, 120, 146], [96, 37, 91, 176], [170, 89, 100, 41], [85, 75, 122, 118], [102, 77, 112, 109], [102, 74, 121, 103], [66, 177, 88, 69], [75, 166, 117, 42], [96, 124, 88, 92], [32, 97, 87, 184], [23, 42, 149, 186], [94, 113, 167, 26], [150, 80, 84, 86], [149, 49, 114, 88], [112, 125, 62, 101], [27, 56, 102, 215], [76, 112, 125, 87], [111, 49, 162, 78], [68, 86, 149, 97], [119, 76, 63, 142], [118, 73, 162, 47], [192, 83, 77, 48], [143, 120, 92, 45], [25, 139, 183, 53], [107, 100, 142, 51], [69, 111, 103, 117], [172, 67, 107, 54], [122, 108, 57, 113], [165, 103, 66, 66], [110, 141, 93, 56], [56, 84, 191, 69], [111, 85, 102, 102], [125, 122, 47, 106], [21, 173, 153, 53], [69, 122, 139, 70], [92, 39, 146, 123], [116, 31, 113, 140], [19, 103, 74, 204], [51, 77, 184, 88], [26, 207, 82, 85], [144, 72, 101, 83], [104, 137, 128, 31], [70, 86, 110, 134], [125, 91, 128, 56], [88, 136, 94, 82], [99, 131, 50, 120], [30, 134, 125, 111], [54, 155, 134, 57], [108, 163, 28, 101], [99, 16, 75, 210], [164, 120, 32, 84], [163, 46, 127, 64], [63, 112, 109, 116], [94, 77, 74, 155], [89, 32, 95, 184], [63, 115, 139, 83], [22, 131, 120, 127], [95, 152, 124, 29], [129, 37, 109, 125], [71, 49, 93, 187], [114, 101, 56, 129], [106, 78, 35, 181], [147, 99, 50, 104], [203, 165, 11, 21], [137, 115, 120, 28], [52, 86, 144, 118], [99, 104, 116, 81], [101, 150, 108, 41], [157, 42, 95, 106], [111, 80, 99, 110], [145, 79, 118, 58], [95, 69, 130, 106], [116, 180, 47, 57], [81, 55, 183, 81], [119, 113, 82, 86], [110, 84, 101, 105], [137, 62, 63, 138], [161, 65, 124, 50], [84, 82, 120, 114], [131, 66, 81, 122], [68, 86, 70, 176], [80, 95, 139, 86], [12, 103, 146, 139], [101, 59, 168, 72], [107, 60, 72, 161], [111, 93, 121, 75], [53, 215, 42, 90], [51, 94, 169, 86], [106, 123, 59, 112]]
#demand=[[63, 107, 99, 131]]
#demand=[[80, 84, 116, 120]]

#demand=[[49, 120, 44, 158], [163, 116, 101, 81], [87, 139, 185, 84], [70, 112, 95, 138], [148, 99, 172, 182], [79, 158, 115, 71], [155, 123, 109, 102], [68, 119, 48, 106], [68, 143, 119, 33], [25, 123, 44, 96], [47, 103, 141, 12], [91, 59, 113, 91], [156, 130, 115, 62], [140, 60, 102, 61], [51, 105, 141, 61], [50, 136, 62, 137], [139, 118, 176, 38], [126, 49, 9, 191], [208, 79, 51, 66], [113, 115, 89, 98], [60, 160, 124, 48], [38, 124, 67, 67], [81, 85, 74, 119], [134, 76, 177, 233], [122, 66, 105, 97], [51, 105, 71, 92], [101, 153, 173, 190], [54, 55, 181, 88], [27, 62, 2, 132], [136, 82, 76, 165], [78, 158, 158, 138], [63, 146, 139, 164], [33, 152, 67, 57], [53, 213, 142, 55], [141, 183, 83, 79], [136, 93, 77, 102], [86, 106, 139, 148], [22, 130, 39, 86], [142, 147, 83, 54], [120, 117, 186, 72], [8, 42, 121, 180], [35, 142, 71, 157], [76, 137, 172, 168], [238, 81, 110, 117], [98, 44, 120, 31], [49, 129, 138, 105], [76, 102, 82, 130], [55, 123, 103, 111], [2, 173, 84, 36], [111, 67, 44, 122], [164, 152, 88, 90], [15, 14, 62, 92], [149, 192, 153, 178], [24, 75, 90, 99], [55, 109, 44, 57], [155, 122, 31, 166], [108, 56, 77, 134], [73, 73, 11, 167], [116, 135, 12, 119], [7, 151, 189, 186], [27, 115, 178, 90], [149, 90, 106, 81], [82, 125, 185, 103], [39, 70, 34, 127], [92, 30, 158, 140], [99, 153, 144, 171], [52, 170, 102, 66], [53, 129, 90, 86], [88, 48, 107, 25], [106, 73, 59, 88], [36, 78, 155, 152], [85, 144, 97, 61], [66, 94, 37, 97], [103, 88, 105, 75], [53, 142, 130, 148], [176, 40, 122, 120], [121, 104, 94, 119], [135, 145, 139, 65], [47, 109, 162, 1], [91, 44, 120, 135], [121, 116, 114, 98], [58, 121, 96, 117], [86, 217, 52, 52], [56, 70, 141, 131], [169, 188, 138, 115], [149, 139, 111, 40], [35, 108, 113, 15], [126, 89, 86, 119], [107, 113, 106, 143], [193, 86, 186, 195], [102, 50, 47, 54], [131, 54, 104, 103], [118, 127, 139, 105], [147, 84, 92, 162], [78, 201, 108, 173], [195, 33, 127, 99], [189, 58, 102, 95], [113, 16, 89, 170], [105, 159, 107, 82], [92, 36, 111, 165], [148, 120, 131, 46], [143, 92, 129, 33], [114, 126, 29, 107], [91, 196, 143, 23], [176, 93, 112, 65], [91, 72, 163, 156], [92, 49, 140, 86], [24, 110, 142, 96], [67, 122, 127, 66], [187, 72, 83, 105], [77, 153, 172, 90], [184, 71, 121, 10], [48, 123, 19, 117], [59, 116, 58, 163], [137, 36, 147, 65], [86, 139, 24, 60], [22, 25, 58, 77], [103, 56, 110, 26], [61, 37, 72, 87], [157, 114, 88, 219], [111, 50, 46, 131], [164, 120, 83, 81], [92, 136, 167, 73], [150, 146, 54, 166], [45, 113, 107, 39], [142, 178, 101, 148], [76, 73, 178, 133], [24, 87, 117, 44], [170, 72, 136, 133], [101, 48, 140, 57], [20, 97, 115, 127], [60, 161, 156, 132], [78, 32, 65, 133], [203, 20, 35, 88], [218, 113, 127, 198], [124, 70, 83, 91], [116, 145, 98, 25], [31, 161, 124, 162], [18, 69, 111, 127], [154, 38, 104, 148], [109, 127, 103, 174], [139, 54, 95, 91], [190, 72, 140, 142], [27, 78, 120, 179], [18, 53, 46, 36], [161, 58, 107, 164], [45, 2, 58, 44], [60, 63, 89, 77], [143, 120, 155, 158], [145, 104, 127, 45], [85, 112, 79, 108], [114, 142, 116, 69], [160, 95, 128, 54], [152, 118, 113, 138], [89, 129, 148, 51], [83, 166, 86, 85], [81, 99, 60, 64], [157, 59, 27, 94], [96, 136, 113, 61], [155, 50, 82, 53], [71, 154, 213, 143], [100, 185, 115, 83], [71, 98, 120, 171], [80, 54, 84, 191], [207, 44, 92, 115], [106, 78, 96, 139], [163, 115, 176, 53], [237, 119, 85, 121], [138, 137, 14, 156], [97, 77, 177, 135], [109, 126, 70, 159], [125, 70, 105, 244], [154, 35, 107, 87], [75, 61, 110, 87], [170, 97, 45, 128], [9, 116, 137, 70], [139, 169, 27, 39], [73, 163, 127, 119], [102, 228, 103, 142], [145, 125, 97, 80], [181, 67, 71, 155], [121, 110, 90, 103], [141, 58, 86, 131], [69, 51, 184, 177], [82, 44, 126, 92], [77, 55, 75, 160], [33, 137, 119, 38], [55, 83, 77, 56], [29, 71, 79, 98], [140, 140, 108, 66], [110, 90, 95, 61], [78, 69, 43, 108], [132, 166, 150, 22], [98, 188, 122, 70], [177, 171, 185, 164], [86, 130, 22, 122], [62, 136, 40, 67], [148, 70, 43, 106], [146, 120, 113, 126], [171, 73, 91, 134]]
#demand=[[107, 100, 110, 83]]
#demand=[[78, 69, 43, 108]]
print(len(demand))
numOfWorker=4
numOfSeru=4
TC=1
FC=0
sc=0.8
ec=0.6
A=100

start =time.time()
def main():
    bestZ,bestY,bestCost,XLoading=serutest(demand,numOfWorker,1,TC,FC,sc,ec,A)
    aveShortage=0
    aveExcess=0
    aveShortageSet=[]
    aveExcessSet=[]
    sum_shortage=[]
    sum_excess=[]
    #print('bestZ',bestZ)
    for s in range(len(XLoading)):#遍历每种场景
        shortageInOneS=[]
        excessInOneS=[]

        for i in range(len(demand[0])):#遍历产品
            shortage = demand[s][i] - sum(XLoading[s][i])
            shortageInOneS.append(shortage)
        sum_shortage.append(sum(shortageInOneS))
        #print('sum_shortage',sum_shortage)
        column_sum=[sum(n) for n in zip(*XLoading[s])]#求列和，其意义是单元分配产品的数量
        #print('column_sum',column_sum)
        for j in range(len(column_sum)):
            excess = bestZ[j]*A - column_sum[j]
            #print('excess',excess)
            excessInOneS.append(excess)
        sum_excess.append(sum(excessInOneS))
        #print('sum_excess',sum_excess)
    aveShortage=sum(sum_shortage)/len(sum_shortage)
    aveExcess=sum(sum_excess)/len(sum_excess)
    aveShortageSet.append(aveShortage)
    aveExcessSet.append(aveExcess)
    
    #print('aveShortageSet',aveShortageSet)
    #print('aveExcessSet',aveExcessSet)

    for i in range(2,numOfSeru+1):
        bestZ,bestY,bestCost,XLoading=serutest(demand,numOfWorker,i,TC,FC,sc,ec,A)
        print('bestZ',bestZ)
        sum_shortage=[]
        sum_excess=[]
        for s in range(len(XLoading)):#遍历每种场景
            shortageInOneS=[]
            excessInOneS=[]
            for i in range(len(demand[0])):#遍历产品
                shortage = demand[s][i] - sum(XLoading[s][i])
                shortageInOneS.append(shortage)
            sum_shortage.append(sum(shortageInOneS))
            #print('sum_shortage',sum_shortage)
            column_sum=[sum(n) for n in zip(*XLoading[s])]#求列和，其意义是单元分配产品的数量
            #print('column_sum',column_sum)
            for j in range(len(column_sum)):
                excess = bestZ[j]*A - column_sum[j]
                #print('excess',excess)
                excessInOneS.append(excess)
            sum_excess.append(sum(excessInOneS))
            #print('sum_excess',sum_excess)
        print('sum(sum_shortage)',sum(sum_shortage))
        print('len(sum_shortage',len(sum_shortage))
        print('sum(sum_excess)',sum(sum_excess))
        print('len(sum_excess)',len(sum_excess))
        aveShortage=sum(sum_shortage)/len(sum_shortage)
        aveExcess=sum(sum_excess)/len(sum_excess)
        aveShortageSet.append(aveShortage)
        aveExcessSet.append(aveExcess)
        
    print('aveShortageSet',aveShortageSet)
    print('aveExcessSet',aveExcessSet)
        
    return aveShortageSet,aveExcessSet

if __name__=="__main__":
    main()
end = time.time()
print('Running time: %s Seconds'%(end-start))   
